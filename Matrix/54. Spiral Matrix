/**
 * @param {number[][]} mat
 * @return {number[]}
 */
var spiralOrder = function (mat) {
    const m = mat.length , n = mat[0].length;
    const matrix = new Array(m * n).fill(0);

    let idx = 0;
    let top = 0, left = 0;
    let bottom = m - 1, right = n - 1;

    while (top <= bottom && left <= right) {
        for (let i = left; i <= right; i++) matrix[idx++] = mat[top][i];
        top++;

        if (top > bottom) break;
        for (let i = top; i <= bottom; i++) matrix[idx++] = mat[i][right];
        right--;

        if (right < left) break;
        for (let i = right; i >= left; i--) matrix[idx++] = mat[bottom][i];
        bottom--;

        if (bottom < top) break;
        for (let i = bottom; i >= top; i--) matrix[idx++] = mat[i][left];
        left++;
    }

    return matrix;
};

Time Complexity: O(m * n)
Space Complexity: O(m * n)
